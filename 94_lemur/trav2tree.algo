Yatlongstan :: Gabriel, Yat Long, Weichen 
APCS pd08
HW94 -- reverse engineering
2022-05-06f
time spent: 0.5 hrs


DISCO
------------------------------------------------
* You should Partition the given traversals into right and left subtrees. 
================================================


QCC
------------------------------------------------
* What is the most efficient way to create a tree given PRE and POST order traversals?
================================================


HOW KEEN ARE YOUR POWERS OF OBSERVATION?
------------------------------------------------
Q: For a given binary tree, how many unique pre-order traversals are there?
A: One

Q: For a given binary tree, how many unique in-order traversals are there?
A: One

Q: For a given binary tree, how many unique post-order traversals are there?
A: One

Q: For a given traversal, how many unique trees could have produced it?
A: Infinite

Q: Given a pre-order traversal, what can you infer about its tree?
A: First node is root

Q: Given a post-order traversal, what can you infer about its tree?
A: Last node is root

Q: What does "1-to-1" mean?
A: direct relationship between two things

Q: What does "onto" mean?
A: "onto" describes the situation when one item links to another. 

================================================


ALGO for POST-ORDER + In-ORDER
------------------------------------------------
givens: the traversals of both on same tree

procedure: 
1. Find root node using the last node of POST-ORDER
2. Find that corresponding node in the IN-ORDER and partition the right and left subtree of it
3. Use that information to plug in the children of that node.
4. Repeat 2 and 3 until done

================================================

ALGO for PRE-ORDER + IN-ORDER
------------------------------------------------
givens: the traversals of both on same tree

procedure: 
1. Find root node using the first node of PRE-ORDER
2. Find that corresponding node in the IN-ORDER and partition the right and left subtree of it
3. Use that information to plug in the children of that node.
4. Repeat 2 and 3 until done

================================================

ALGO for PRE-ORDER + POST-ORDER
------------------------------------------------
givens: the traversals of both on same tree

procedure: 
1. Find root node using the first node of PRE-ORDER
2. Find that corresponding node in the POST-ORDER and look at the node to the left of it. That is the first node of the right subtree of the root. Partition it to left and right subtree. 
3. Use that information to plug in the children of that node. 
5. Repeat for left subtree. Instead of looking for the second-to-last node in POST-ORDER look for the second node in PRE-ORDER. 
================================================

